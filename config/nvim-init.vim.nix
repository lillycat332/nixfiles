{
  home.file.".config/nvim/nvim-init.vim".text =
    "	let g:syntastic_swift_checkers = ['swiftpm', 'swiftlint']\n	\" NOTE: If barbar's option dict isn't created yet, create it\n	let bufferline = get(g:, 'bufferline', {})\n\n	\" New tabs are opened next to the currently selected tab.\n	\" Enable to insert them in buffer number order.\n	let bufferline.add_in_buffer_number_order = v:false\n\n	\" Enable/disable animations\n	let bufferline.animation = v:true\n\n	\" Enable/disable auto-hiding the tab bar when there is a single buffer\n	let bufferline.auto_hide = v:false\n\n	\" Enable/disable current/total tabpages indicator (top right corner)\n	let bufferline.tabpages = v:true\n\n	\" Enable/disable close button\n	let bufferline.closable = v:true\n\n	\" Enables/disable clickable tabs\n	\"  - left-click: go to buffer\n	\"  - middle-click: delete buffer\n	let bufferline.clickable = v:true\n\n	\" Excludes buffers from the tabline\n	let bufferline.exclude_ft = ['javascript']\n	let bufferline.exclude_name = ['package.json']\n\n	\" Enable/disable icons\n	\" if set to 'buffer_number', will show buffer number in the tabline\n	\" if set to 'numbers', will show buffer index in the tabline\n	\" if set to 'both', will show buffer index and icons in the tabline\n	let bufferline.icons = v:true\n\n	\" Sets the icon's highlight group.\n	\" If false, will use nvim-web-devicons colors\n	let bufferline.icon_custom_colors = v:false\n\n	\" Configure icons on the bufferline.\n	let bufferline.icon_separator_active = '▎'\n	let bufferline.icon_separator_inactive = '▎'\n	let bufferline.icon_close_tab = ''\n	let bufferline.icon_close_tab_modified = '●'\n	let bufferline.icon_pinned = '車'\n\n	\" If true, new buffers will be inserted at the start/end of the list.\n	\" Default is to insert after current buffer.\n	let bufferline.insert_at_start = v:false\n	let bufferline.insert_at_end = v:false\n\n	\" Sets the maximum padding width with which to surround each tab.\n	let bufferline.maximum_padding = 4\n\n	\" Sets the maximum buffer name length.\n	let bufferline.maximum_length = 30\n\n	\" If set, the letters for each buffer in buffer-pick mode will be\n	\" assigned based on their name. Otherwise or in case all letters are\n	\" already assigned, the behavior is to assign letters in order of\n	\" usability (see order below)\n	let bufferline.semantic_letters = v:true\n\n	\" New buffer letters are assigned in this order. This order is\n	\" optimal for the qwerty keyboard layout but might need adjustement\n	\" for other layouts.\n	let bufferline.letters =\n	  \\ 'asdfjkl;ghnmxcvbziowerutyqpASDFJKLGHNMXCVBZIOWERUTYQP'\n\n	\" Sets the name of unnamed buffers. By default format is \"[Buffer X]\"\n	\" where X is the buffer number. But only a static string is accepted here.\n	let bufferline.no_name_title = v:null\n	filetype on\n	syntax on\n	filetype plugin indent on\n	set number\n	\" show existing tab with 4 spaces width\n	set tabstop=4\n	\" when indenting with '>', use 4 spaces width\n	set shiftwidth=4\n	\" On pressing tab, insert 4 spaces\n	set expandtab\n	set mouse+=a\n	\"dein Scripts-----------------------------\n	if &compatible\n	  set nocompatible               \" Be iMproved\n	endif\n\n	\" Required:\n	set runtimepath+=/Users/lillycham/.cache/dein/repos/github.com/Shougo/dein.vim\n\n	\" Required:\n	call dein#begin('/Users/lillycham/.cache/dein')\n\n	\" Let dein manage dein\n	\" Required:\n	call dein#add('/Users/lillycham/.cache/dein/repos/github.com/Shougo/dein.vim')\n\n	\" Add or remove your plugins here like this:\n	\"call dein#add('Shougo/neosnippet.vim')\n	\"call dein#add('Shougo/neosnippet-snippets')\n	call dein#add('itchyny/lightline.vim')\n	call dein#add('romgrk/barbar.nvim')\n	call dein#add('alec-gibson/nvim-tetris')\n	call dein#add('ThePrimeagen/vim-apm')\n	call dein#add('keith/swift.vim')\n	call dein#add('vim-syntastic/syntastic')\n	call dein#add('kyazdani42/nvim-web-devicons')\n	call dein#add('dense-analysis/ale')\n	call dein#add('LoricAndre/OneTerm.nvim')\n	\" Required:\n	call dein#end()\n\n	\" Required:\n	filetype plugin indent on\n	syntax enable\n\n	\" If you want to install not installed plugins on startup.\n	\"if dein#check_install()\n	\"  call dein#install()\n	\"endif\n\n	\"End dein Scripts-------------------------\n";
}
